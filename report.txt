COMS22201 : Language Engineering : CWK1
Fred Seeley (as14163)


LANGUAGE FEATURES IMPLEMENTED

All language features specified by the assignment have been implemented, namely:
 ~ VA variables and assignment
 ~ AE arithmetic expressions (+, -, *)
 ~ RD read statements
 ~ IF if and skip statements
 ~ WH while loops
 ~ BE boolean expressions (true, false, !, &)

Additionally, extra language features have been implemented as described below


HOW TO COMPILE AND RUN THE COMPILER

The compiler can be compiled using the Makefile provided; alternatively it can be compiled
with the following commands

    ./antlr3 Lex.g
    ./antlr3 Syn.g
    javac TokenConv.java
    java TokenConv Syn.tokens Irt.java
    ./antlr3 *.java

To run the compiler, use the command

    ./antlr3 camle [FILENAME]

to compile the given file.


OUTPUT OF COMPILER ON TEST PROGRAMS

test1.w:
    ASS/MULE - ASSembler/eMUlator for Language Engineering - v2.7 - Steve Gregory
    ---test1.ass ASSEMBLY BEGINS
    ---test1.ass ASSEMBLY ENDS
    ---test1.ass EXECUTION BEGINS
    10023
    10023
    76
    76
    ---test1.ass EXECUTION ENDS
    STATISTICS:
      22 instructions generated
      2 registers used
      22 instructions executed

test2.w:
    ASS/MULE - ASSembler/eMUlator for Language Engineering - v2.7 - Steve Gregory
    ---test2.ass ASSEMBLY BEGINS
    ---test2.ass ASSEMBLY ENDS
    ---test2.ass EXECUTION BEGINS
    7
    -5
    28
    -91
    70
    ---test2.ass EXECUTION ENDS
    STATISTICS:
      17 instructions generated
      2 registers used
      17 instructions executed

test3.w:
    ASS/MULE - ASSembler/eMUlator for Language Engineering - v2.7 - Steve Gregory
    ---test3.ass ASSEMBLY BEGINS
    ---test3.ass ASSEMBLY ENDS
    ---test3.ass EXECUTION BEGINS
    Enter a number: 42
    Enter a number: -999
    First is 42; second is -999
    ---test3.ass EXECUTION ENDS
    STATISTICS:
      15 instructions generated
      2 registers used
      15 instructions executed

test4.w:
    ASS/MULE - ASSembler/eMUlator for Language Engineering - v2.7 - Steve Gregory
    ---test4.ass ASSEMBLY BEGINS
    ---test4.ass ASSEMBLY ENDS
    ---test4.ass EXECUTION BEGINS
    13
    5

    78bce
    ---test4.ass EXECUTION ENDS
    STATISTICS:
      63 instructions generated
      2 registers used
      40 instructions executed

test5.w:
    ASS/MULE - ASSembler/eMUlator for Language Engineering - v2.7 - Steve Gregory
    ---test5.ass ASSEMBLY BEGINS
    ---test5.ass ASSEMBLY ENDS
    ---test5.ass EXECUTION BEGINS
    1
    WARNING: Disabled backward jump in    4: JMP 1  
    3
    WARNING: Disabled backward jump in   12: JMP 9  
    7
    WARNING: Disabled backward jump in   22: JMP 19  
    b
    WARNING: Disabled backward jump in   32: JMP 30  
    c
    WARNING: Disabled backward jump in   36: JMP 34  
    d
    WARNING: Disabled backward jump in   39: JMP 37  
    WARNING: Disabled backward jump in   40: JMP 33  
    ---test5.ass EXECUTION ENDS
    STATISTICS:
      42 instructions generated
      2 registers used
      29 instructions executed

test6.w:
    ASS/MULE - ASSembler/eMUlator for Language Engineering - v2.7 - Steve Gregory
    ---test6.ass ASSEMBLY BEGINS
    ---test6.ass ASSEMBLY ENDS
    ---test6.ass EXECUTION BEGINS
    truefalsefalsetruetruefalsefalsefalsetruefalsefalsefalsefalse
    ---test6.ass EXECUTION ENDS
    STATISTICS:
      63 instructions generated
      1 registers used
      36 instructions executed

test7.w:
    ASS/MULE - ASSembler/eMUlator for Language Engineering - v2.7 - Steve Gregory
    ---test7.ass ASSEMBLY BEGINS
    ---test7.ass ASSEMBLY ENDS
    ---test7.ass EXECUTION BEGINS
    Factorial calculator
    Enter number: 7
    Factorial of 7 is 5040

    Exponential calculator
    Enter base: 12
    Enter exponent: 4
    12 raised to the power of 4 is 20736
    ---test7.ass EXECUTION ENDS
    STATISTICS:
      75 instructions generated
      4 registers used
      188 instructions executed


EXTRAS

[ total of ~10 hours spent on extras ]

Error checking implemented:
 ~ check to ensure identifiers do not contain greater than 8 characters
 ~ check to ensure identifiers have been assigned to (either by assignment statement
   or a read() statement) before they can be used in an expression

Extra language features implemented (see test8.w for examples)
 ~ 'or' boolean operator (|)
 ~ additional arithmetic relations (>, >=, <, !=)

Optimizations performed by compiler:
 ~ precomputation of constant expressions
 ~ precomputation of relations (<, <=, =, !=, >=, <) of constant expressions
